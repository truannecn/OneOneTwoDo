from cmu_graphics import *
from landing import *
from taskPage import *
from scheduler import *
from timerPage import *
from planner import *
from urllib.request import urlopen
from PIL import Image

## this is the main file of my term project!

def loadPilImage(url):
    # Loads a PIL image (not a CMU image!) from a url:
    return Image.open(urlopen(url))

def onAppStart(app):
    app.height = 916
    app.width = 1512
    ####################################
    ## LANDING PAGE VARIABLES
    ####################################
    app.tasksOnLandingFill = None
    app.plannerOnLandingFill = None
    app.timerOnLandingFill = None
    
    ## CITATION: IMAGE LOADING PIL FROM CMU COURSE PAGE TP RELATED DEMOS -- AUSTIN SCHICK
    # 1. Load a PIL image from a url:
    ## CITATION: IMAGE IS FROM: https://unsplash.com/s/photos/minimalist ##
    url = 'https://images.unsplash.com/photo-1487700160041-babef9c3cb55?fm=jpg&q=60&w=3000&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8bWluaW1hbGlzdHxlbnwwfHwwfHx8MA%3D%3D'
    landingImage = loadPilImage(url)

    # 3. Convert from PIL images to CMU images before drawing:
    app.landingImage = CMUImage(landingImage)
    
    ####################################
    ## TASK PAGE VARIABLES
    ####################################
    app.tasks = []
    app.editModeDeleteButtons = []
    app.circleCoords = []
    app.homeOnTasksFill = None
    app.addButtonColor = None
    
    app.editButtonFill = None
    app.editMessage = 'Edit Mode'
    app.editMode = False
    
    app.timerOnTasksFill = None
    app.plannerOnTasksFill = None
    app.onAddTaskPopup = False
    
    app.inTaskBox = False
    app.inHourBox = False
    app.inMinuteBox = False
    
    #in popup
    app.currentTask = ''
    app.currentHour = ''
    app.currentMinute = ''
    app.taskBoxFill = None
    app.hourBoxFill = None
    app.minuteBoxFill = None
    
    ## edit mode
    app.currentTaskBeingEdited = None
    
    ## CITATION: IMAGE LOADING PIL FROM CMU COURSE PAGE TP RELATED DEMOS -- AUSTIN SCHICK
    # 1. Load a PIL image from a url:
    ## CITATION: IMAGE IS GENERATED BY CHAT GPT
    url = 'https://images.unsplash.com/photo-1521193089946-7aa29d1fe776?q=80&w=2670&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D'
    todoImage = loadPilImage(url)

    # 3. Convert from PIL images to CMU images before drawing:
    app.todoListImage = CMUImage(todoImage)
    
    ####################################
    ## TIMER PAGE VARIABLES
    ####################################
    app.setUpPage = True
    
    app.workBoxFill = None
    app.breakBoxFill = None
    app.totalBoxFill = None
    
    app.currWorkTime = ''
    app.currBreakTime = ''
    app.currTotalTime = ''
    
    app.inWorkBox = False
    app.inBreakBox = False
    app.inTotalBox = False
    
    app.working = True
    app.timerPaused = True
    
    app.workTime = None
    app.breakTime = None
    
    app.currWorkTimeDisplayed = None
    app.currBreakTimeDisplayed = None
    
    app.stepsPerSecond = 1
    
    app.homeOnTimerFill = None
    app.tasksOnTimerFill = None
    app.plannerOnTimerFill = None
    app.schedulerOnTimerFill = None

    
    ####################################
    ## DAILY PLANNER PAGE VARIABLES
    ####################################
    
    # background image
    ## CITATION: IMAGE LOADING PIL FROM CMU COURSE PAGE TP RELATED DEMOS -- AUSTIN SCHICK
    # 1. Load a PIL image from a url:
    ## CITATION: IMAGE IS GENERATED BY CHAT GPT
    url = 'https://images.unsplash.com/photo-1521193089946-7aa29d1fe776?q=80&w=2670&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D'
    plannerImage = loadPilImage(url)

    # 3. Convert from PIL images to CMU images before drawing:
    app.plannerImage = CMUImage(plannerImage)
    
    app.visibleTasks = []
    app.taskViewLeft = app.width/2 - app.width/3
    app.taskViewTop = 125
    app.taskViewWidth = app.width/3
    app.taskViewHeight = app.height * .80
    
    ## scrollbar variables
    app.taskScrollOffset = 0
    app.scrollBarDragging = False
    
    #navibar fill colors
    app.homeOnPlannerFill = None
    app.timerOnPlannerFill = None
    app.tasksOnPlannerFill = None
    
    ## DAILY VIEW VARIABLES
    # app.dailyViewLeft
    # app.dailyViewTop
    app.dailyViewHeight = app.height * .8
    app.dailyViewWidth = app.width/2.25
    app.dayViewHeight = 24 * 4 * 32
    app.dailyScrollOffset = 0
    # app.dayViewHeight = 18 * 2 * 25
    
    app.lastMouseY = None
    app.dailyScrollBarDragging = False
    
    ##Dragable Blocks
    app.draggingTask = None  # Task currently being dragged
    app.dragOffsetX = 0  # Offset between mouse click and block left
    app.dragOffsetY = 0  # Offset between mouse click and block top
    app.validDropZoneLeft = app.width / 2  # Left edge of the daily view
    app.validDropZoneWidth = app.dailyViewWidth  # Width of the daily view
    app.plannerTasks = []
    
    ####################################
    ## SCHEDULER PAGE VARIABLES
    ####################################
    
    app.section = 'intro2'
    
    app.startTimeSchedule = None
    app.endTimeSchedule = None
    app.durationOfDay = 0

    app.startTimeDisplay = None
    app.endTimeDisplay = None

    app.events = []

def main():
    runAppWithScreens(initialScreen = "scheduler")

main()

    
    